########################################
# Безопасность / TLS
########################################
security:
  enabled: true
  tls:
    enabled: true
    autoGenerated: true

########################################
# Keystore: OIDC client-secret
########################################
keystore:
  - secretName: oidc-client-secret
    items:
      - key: client-secret
        path: xpack.security.authc.realms.oidc.oidc1.rp.client_secret

# Отключаем создание Elastic Secret, раз используем свой
secret:
  enabled: false

########################################
# Протокол (HTTPS)
########################################
protocol: https

########################################
# Основная часть: nodeSets (одна нода)
########################################
nodeSets:
  - name: "single"
    count: 1

    #
    # Настройки Elasticsearch (бывший esConfig/elasticsearch.yml)
    # discovery.type: single-node, OIDC, SSL и т.д.
    #
    config:
      cluster.name: "elasticsearchS"
      node.name: "elasticsearch-master-0S"
      network.host: "0.0.0.0"

      discovery.type: "single-node"

      xpack.security.enabled: true
      xpack.security.http.ssl.enabled: true
      xpack.security.transport.ssl.enabled: true
      xpack.security.transport.ssl.verification_mode: "certificate"

      xpack.security.authc.realms.native.native1.order: 0

      xpack.security.authc.realms.oidc.oidc1.order: 10
      xpack.security.authc.realms.oidc.oidc1.rp.client_id: "myKeycloakClientId"
      xpack.security.authc.realms.oidc.oidc1.rp.response_type: "code"
      xpack.security.authc.realms.oidc.oidc1.rp.redirect_uri: "https://elasticsearch.chatter.com/api/security/v1/oidc"
      xpack.security.authc.realms.oidc.oidc1.rp.post_logout_redirect_uri: "https://elasticsearch.chatter.com/"
      xpack.security.authc.realms.oidc.oidc1.op.authorization_endpoint: "https://192.168.1.35:32080/realms/Chatter/protocol/openid-connect/auth"
      xpack.security.authc.realms.oidc.oidc1.op.issuer: "https://192.168.1.35:32080/realms/Chatter"
      xpack.security.authc.realms.oidc.oidc1.op.jwkset_path: "https://192.168.1.35:32080/realms/Chatter/protocol/openid-connect/certs"
      xpack.security.authc.realms.oidc.oidc1.op.token_endpoint: "https://192.168.1.35:32080/realms/Chatter/protocol/openid-connect/token"
      xpack.security.authc.realms.oidc.oidc1.claims.principal: "sub"
      xpack.security.authc.realms.oidc.oidc1.claims.groups: "groups"

      # Дополнительные опции безопасности
      xpack.security.authc.token.enabled: true
      xpack.security.authc.api_key.enabled: true
      xpack.security.enrollment.enabled: true

    #
    # Настройки volumeClaimTemplate (PVC) для данных
    #
    volumeClaimTemplate:
      accessModes: ["ReadWriteOnce"]
      storageClassName: "local-path"
      resources:
        requests:
          storage: 1Gi

    #
    # Ограничения по ресурсам
    #
    resources:
      requests:
        cpu: "1"
        memory: "1Gi"
      limits:
        cpu: "2"
        memory: "2Gi"

    #
    # Настройка Pod (container), включая readinessProbe
    #
    podTemplate:
      spec:
        containers:
          - name: "elasticsearch"
            readinessProbe:
              httpGet:
                path: "/"
                port: 9200
                scheme: HTTPS
                httpHeaders:
                  - name: "Authorization"
                    value: "Basic ZWxhc3RpYzpTaUZpVFR1cFNIaHExNEdaWlxiVFM="
              initialDelaySeconds: 10
              timeoutSeconds: 5
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3

########################################
# Включаем persistence (если чарт что-то
# делает с этим флагом). Можно и убрать,
# т.к. volumeClaimTemplate уже задан.
########################################
persistence:
  enabled: true

########################################
# Service / Ports
########################################
service:
  type: ClusterIP
  ports:
    http: 9200
    transport: 9300

########################################
# Ingress
########################################
ingress:
  enabled: true
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
  hosts:
    - host: "elasticsearch.chatter.com"
      paths:
        - path: /
          pathType: Prefix
  tls:
    - hosts:
        - "elasticsearch.chatter.com"
