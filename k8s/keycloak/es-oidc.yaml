# Репликация
replicas: 1
minimumMasterNodes: 1

# Настройки безопасности
security:
  enabled: true
  tls:
    enabled: true
    autoGenerated: true  # Автоматически сгенерированный сертификат

# Использование keystore для импорта client_secret
#keystore:
#  - secretName: oidc-client-secret
#    items:
#      - key: client-secret
#        path: xpack.security.authc.realms.oidc.oidc1.rp.client_secret

# Использование keystore для импорта client_secret
keystore:
  - secretName: oidc-client-secret
    items:
      - key: client-secret
        path: xpack.security.authc.realms.oidc.oidc1.rp.client_secret

# Отключение автоматического создания Secret
secret:
  enabled: false

protocol: https

esConfig:
  elasticsearch.yml: |
    xpack.security.enabled: true
    xpack.security.http.ssl.enabled: true
    xpack.security.transport.ssl.enabled: true
    xpack.security.transport.ssl.verification_mode: certificate
    
    # Realm для встроенных пользователей
    xpack.security.authc.realms.native.native1.order: 0
    
    # OIDC realm для внешних пользователей
    xpack.security.authc.realms.oidc.oidc1.order: 10
    xpack.security.authc.realms.oidc.oidc1.rp.client_id: "myKeycloakClientId"  
    xpack.security.authc.realms.oidc.oidc1.rp.response_type: "code"  # Добавлен недостающий параметр
    xpack.security.authc.realms.oidc.oidc1.rp.redirect_uri: "https://elasticsearch.chatter.com/api/security/v1/oidc"
    xpack.security.authc.realms.oidc.oidc1.rp.post_logout_redirect_uri: "https://elasticsearch.chatter.com/"
    xpack.security.authc.realms.oidc.oidc1.op.issuer: "http://192.168.1.35:32080/realms/Chatter"  
    xpack.security.authc.realms.oidc.oidc1.claims.principal: sub
    xpack.security.authc.realms.oidc.oidc1.claims.groups: groups

    # Рекомендуемые дополнительные параметры для безопасности
    xpack.security.authc.token.enabled: true
    xpack.security.authc.api_key.enabled: true
    xpack.security.enrollment.enabled: true

# Master node configuration
master:
  readinessProbe:
    httpGet:
      path: /
      port: 9200
      scheme: HTTPS
      httpHeaders:
        - name: "Authorization"
          value: "Basic ZWxhc3RpYzpTaUZpVFR1cFNIaHExNEdaWlxiVFM="
    initialDelaySeconds: 10
    timeoutSeconds: 5
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3

persistence:
  enabled: true
  size: 1Gi
  storageClass: "local-path"

# Service configuration
service:
  type: ClusterIP
  ports:
    http: 9200
    transport: 9300

# Ingress configuration
ingress:
  enabled: true
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
  hosts:
    - host: "elasticsearch.chatter.com"
      paths:
        - path: /
          pathType: Prefix
  tls:
    - hosts:
        - "elasticsearch.chatter.com"

volumeClaimTemplate:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 1Gi

# Resource limits and requests
resources:
  requests:
    cpu: "1"
    memory: "1Gi"  # Увеличено значение памяти
  limits:
    cpu: "2"
    memory: "2Gi"  # Увеличено значение памяти