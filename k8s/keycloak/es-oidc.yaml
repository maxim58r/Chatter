# Количество реплик (два узла в кластере)
replicas: 2

# Минимальное количество master-нод для кворума
minimumMasterNodes: 2  # (master_eligible_nodes / 2) + 1 → (2 / 2) + 1 = 2

antiAffinity: "soft"

# Роли для узлов
roles:
  - master
  - data
  - ingest

# Блок Security. Здесь security.enabled = true включает xpack.security
# а tls.enabled = false означает, что HTTPS/HTTPs-трафик не поднимаем,
# однако в esConfig далее включаем именно transport-SSL.
security:
  enabled: true
  tls:
    enabled: false

# Keystore для OIDC (секрет с client_secret)
keystore:
  - secretName: oidc-client-secret
    items:
      - key: client-secret
        path: xpack.security.authc.realms.oidc.oidc1.rp.client_secret

# Основная конфигурация Elasticsearch (xpack, OIDC, discovery и т.д.)
esConfig:
  elasticsearch.yml: |
    cluster.name: "elasticsearch"
    node.name: ${HOSTNAME}

    discovery.seed_hosts: ["elasticsearch-master-0", "elasticsearch-master-1"]
    cluster.initial_master_nodes: ["elasticsearch-master-0", "elasticsearch-master-1"]

    # Роли ноды
    node.roles: ["master", "data", "ingest"]

    # Включаем xpack.security
    xpack.security.enabled: true

    # Настройка transport TLS (то, что требует сертификаты)
    xpack.security.transport.ssl.enabled: true
    xpack.security.transport.ssl.verification_mode: certificate
    xpack.security.transport.ssl.certificate: /usr/share/elasticsearch/config/certs/elasticsearch.crt
    xpack.security.transport.ssl.key: /usr/share/elasticsearch/config/certs/elasticsearch.key
    xpack.security.transport.ssl.certificate_authorities: [ "/usr/share/elasticsearch/config/certs/ca.crt" ]

    # Настройки OIDC
    xpack.security.authc.realms.oidc.oidc1.enabled: true
    xpack.security.authc.realms.oidc.oidc1.order: 10
    xpack.security.authc.realms.oidc.oidc1.rp.client_id: "myKeycloakClientId"
    xpack.security.authc.realms.oidc.oidc1.rp.response_type: "code"
    xpack.security.authc.realms.oidc.oidc1.rp.redirect_uri: "https://elasticsearch.chatter.com/api/security/v1/oidc"
    xpack.security.authc.realms.oidc.oidc1.rp.post_logout_redirect_uri: "https://elasticsearch.chatter.com/"
    xpack.security.authc.realms.oidc.oidc1.op.authorization_endpoint: "https://192.168.1.35:32080/realms/Chatter/protocol/openid-connect/auth"
    xpack.security.authc.realms.oidc.oidc1.op.issuer: "https://192.168.1.35:32080/realms/Chatter"
    xpack.security.authc.realms.oidc.oidc1.op.jwkset_path: "https://192.168.1.35:32080/realms/Chatter/protocol/openid-connect/certs"
    xpack.security.authc.realms.oidc.oidc1.op.token_endpoint: "https://192.168.1.35:32080/realms/Chatter/protocol/openid-connect/token"
    xpack.security.authc.realms.oidc.oidc1.claims.principal: sub

# Переменные окружения (пароль суперпользователя elastic)
extraEnvs:
  - name: ELASTIC_PASSWORD
    value: "QJaWS1Bi7ULkaWfJc*Hi"

# Хранилище для данных Elasticsearch (PVC)
volumeClaimTemplate:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 5Gi

# Ресурсы для подов
resources:
  requests:
    cpu: "250m"
    memory: "1Gi"
  limits:
    cpu: "500m"
    memory: "2Gi"

########################################################################
# Дополнительные volume/volumeMounts, чтобы смонтировать секрет в /certs
########################################################################
extraVolumes:
  - name: elasticsearch-certs
    secret:
      secretName: elasticsearch-master-certs   # Имя секрета с сертификатами

extraVolumeMounts:
  - name: elasticsearch-certs
    mountPath: /usr/share/elasticsearch/config/certs
    readOnly: true
