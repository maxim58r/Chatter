# Общие параметры
clusterName: "elasticsearch"
nodeGroup: "data"

# Репликация
replicaCount: 1

# Настройки безопасности
security:
  enabled: true
  tls:
    enabled: true
    autoGenerated: true  # Автоматически сгенерированный сертификат

keystoreSecrets:
  - name: elasticsearch-keystore
    entries:
      - key: xpack.security.authc.realms.oidc.oidc1.rp.client_secret
        valueFrom:
          secretKeyRef:
            name: oidc-client-secret
            key: client-secret

esConfig:
  elasticsearch.yml: |
    cluster.name: "elasticsearch"  # Исправлено имя кластера
    network.host: 0.0.0.0
    discovery.type: single-node
    xpack.security.enabled: true
    xpack.security.http.ssl.enabled: true
    xpack.security.transport.ssl.enabled: true
    xpack.security.authc.realms.native.native1.order: 0   # Для встроенных пользователей (elastic) используем native realm
    xpack.security.authc.realms.oidc.oidc1.order: 10      # OIDC realm для остальных пользователей
    xpack.security.authc.realms.oidc.oidc1.rp.client_id: "myKeycloakClientId"  # ID клиента в Keycloak
    xpack.security.authc.realms.oidc.oidc1.rp.client_secret: "${xpack.security.authc.realms.oidc.oidc1.rp.client_secret}"  # Ссылка на секрет
    xpack.security.authc.realms.oidc.oidc1.rp.redirect_uri: "https://elasticsearch.chatter.com/api/security/v1/oidc"
    xpack.security.authc.realms.oidc.oidc1.rp.post_logout_redirect_uri: "https://elasticsearch.chatter.com/"
    xpack.security.authc.realms.oidc.oidc1.op.issuer: "http://192.168.1.35:32080/realms/Chatter"  # URL Keycloak реалма
    xpack.security.authc.realms.oidc.oidc1.claims.principal: sub
    xpack.security.authc.realms.oidc.oidc1.claims.groups: groups
    xpack.security.authc.realms.oidc.oidc1.authentication.request.response_mode: form_post
    xpack.security.authc.realms.oidc.oidc1.logout.type: backchannel

# Role mapping
xpack:
  security:
    role_mapping:
      oidc_mapping:
        roles:
          - "admin"
        rules:
          field:
            groups: "admin-group"  # Группа в Keycloak для маппинга на роль admin

# Master node configuration
master:
  readinessProbe:
    enabled: true
    httpGet:
      path: /
      port: 9200
      scheme: HTTPS
    initialDelaySeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    periodSeconds: 10
    successThreshold: 1
    headers:
      - name: "Authorization"
        value: "Basic ZWxhc3RpYzpTaUZpVFR1cFNIaHExNEdaWlxiVFM="  # Base64 учетных данных elastic
  persistence:
    enabled: true
    size: 1Gi
    storageClass: "local-path"

# Data node configuration
data:
  persistence:
    enabled: true
    size: 1Gi
    storageClass: "local-path"

# Secrets
secrets:
  oidc-client-secret:
    client-secret: "Y0PZTBYI8XTNRQ8XIfoj9ZmcTVlFbIdG"  # Используйте реальный client_secret из Keycloak

# Service configuration
service:
  type: ClusterIP
  ports:
    http: 9200
    transport: 9300

# Ingress configuration
ingress:
  enabled: true
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
  hosts:
    - host: "elasticsearch.chatter.com"
      paths:
        - path: /
          pathType: Prefix
  tls:
    - hosts:
        - "elasticsearch.chatter.com"

volumeClaimTemplate:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 1Gi

# Resource limits and requests
resources:
  requests:
    cpu: "1"
    memory: "1Gi"  # Увеличено значение памяти
  limits:
    cpu: "2"
    memory: "2Gi"  # Увеличено значение памяти