# Пример values.yaml
replicas: 1
roles:
  - data  # Пустая строка (или пустой массив), чтобы не матчился "master"
# ...

# Важно: xpack.security включим, чтобы OIDC работал
security:
  enabled: false        # Имеется в виду TLS-часть
  tls:
    enabled: false

esConfig:
  elasticsearch.yml: |
    cluster.name: "elasticsearch"
    node.name: "es-single-node"

    discovery.type: single-node
    node.roles: ["master", "data", "ingest"]

    # Включаем безопасность (OIDC требует xpack.security.enabled=true)
    xpack.security.enabled: true
    xpack.security.http.ssl.enabled: false
    xpack.security.transport.ssl.enabled: false

    # Настройки OIDC (пример)
    xpack.security.authc.realms.oidc.oidc1.enabled: true
    xpack.security.authc.realms.oidc.oidc1.order: 10
    xpack.security.authc.realms.oidc.oidc1.rp.client_id: "myKeycloakClientId"
    xpack.security.authc.realms.oidc.oidc1.rp.response_type: "code"
    xpack.security.authc.realms.oidc.oidc1.rp.redirect_uri: "https://elasticsearch.chatter.com/api/security/v1/oidc"
    xpack.security.authc.realms.oidc.oidc1.rp.post_logout_redirect_uri: "https://elasticsearch.chatter.com/"
    xpack.security.authc.realms.oidc.oidc1.op.authorization_endpoint: "https://192.168.1.35:32080/realms/Chatter/protocol/openid-connect/auth"
    xpack.security.authc.realms.oidc.oidc1.op.issuer: "https://192.168.1.35:32080/realms/Chatter"
    xpack.security.authc.realms.oidc.oidc1.op.jwkset_path: "https://192.168.1.35:32080/realms/Chatter/protocol/openid-connect/certs"
    xpack.security.authc.realms.oidc.oidc1.op.token_endpoint: "https://192.168.1.35:32080/realms/Chatter/protocol/openid-connect/token"
    xpack.security.authc.realms.oidc.oidc1.claims.principal: sub

extraEnvs:
  - name: ELASTIC_PASSWORD
    value: "QJaWS1Bi7ULkaWfJc*Hi"

# Остальные секции:
volumeClaimTemplate:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 1Gi

resources:
  requests:
    cpu: "1"
    memory: "1Gi"
  limits:
    cpu: "1"
    memory: "1Gi"
