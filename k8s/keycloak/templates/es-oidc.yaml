# 1) Убираем keystore: (полностью),
#    так как мы теперь сами решаем, как добавить client_secret в keystore
# keystore:
#   - secretName: "my-oidc-secret"
#     items:
#       - key: client-secret
#         path: xpack.security.authc.realms.oidc.oidc1.rp.client_secret

extraVolumes: |
  # volume для нашего RW каталога
  - name: config-writable
    emptyDir: {}

extraVolumeMounts: |
  # Монтируем writable каталог, чтобы и init-контейнер, и основной контейнер видели его
  - name: config-writable
    mountPath: /config-writable

# 2) Собственный init-контейнер "prepare-config":
#    - Копируем файлы из /usr/share/elasticsearch/config (read-only) в /config-writable
#    - Создаём (или обновляем) keystore (добавляем client_secret)
extraInitContainers: |
  - name: prepare-config
    image: "docker.elastic.co/elasticsearch/elasticsearch:8.5.1"
    command: ["/bin/sh","-c"]
    args:
      - >
        # Копируем всё содержимое read-only config -> наш writable config
        cp -r /usr/share/elasticsearch/config/* /config-writable/;

        # Создаём keystore, если нет
        if [ ! -f /config-writable/elasticsearch.keystore ]; then
          /usr/share/elasticsearch/bin/elasticsearch-keystore create --silent --ks /config-writable/elasticsearch.keystore;
        fi

        # Добавляем rp.client_secret в keystore
        # Обычно тут нужно считать значение из K8S Secret,
        # но для простоты укажем его "жёстко" - лучше читать из volumeMount Secret
        echo "PUT_YOUR_CLIENT_SECRET_HERE" | /usr/share/elasticsearch/bin/elasticsearch-keystore add \
          xpack.security.authc.realms.oidc.oidc1.rp.client_secret \
          --stdin --force --ks /config-writable/elasticsearch.keystore;
    volumeMounts:
      # read-only конфиг (где elasticsearch.yml от чарта)
      - name: esconfig
        mountPath: /usr/share/elasticsearch/config
        readOnly: true

      # наш writable volume для финального config
      - name: config-writable
        mountPath: /config-writable

# 3) В основном контейнере задаём ENV: ES_PATH_CONF=/config-writable
#    Это говорит Elasticsearch читать elasticsearch.yml + keystore из /config-writable
extraEnvs: |
  - name: ES_PATH_CONF
    value: "/config-writable"

# 4) Можно убрать принудительное readOnly: false, оно уже не нужно
#    extraVolumeMounts: |
#      - name: esconfig
#        mountPath: /usr/share/elasticsearch/config
#        readOnly: false

# 5) Конфигурация elasticsearch.yml (OIDC)
esConfig:
  elasticsearch.yml: |
    xpack.security.enabled: true
    xpack.security.authc.token.enabled: true  # для OIDC без TLS
    xpack.security.authc.realms:
      oidc:
        oidc1:
          order: 0
          rp.client_id: "myKeycloakClientId"
          rp.response_type: "code"
          rp.redirect_uri: "http://192.168.1.35:31864/api/security/v1/oidc"
          rp.post_logout_redirect_uri: "http://192.168.1.35:31864/"
          op.issuer: "http://192.168.1.35:32080/realms/Chatter"
          op.authorization_endpoint: "http://192.168.1.35:32080/realms/Chatter/protocol/openid-connect/auth"
          op.token_endpoint: "http://192.168.1.35:32080/realms/Chatter/protocol/openid-connect/token"
          op.jwkset_path: "http://192.168.1.35:32080/realms/Chatter/protocol/openid-connect/certs"
          claims.principal: "sub"
