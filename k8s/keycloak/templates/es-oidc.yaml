# Дополнительные Init Containers для инъекции client_secret в keystore
extraInitContainers:
  - name: inject-keystore-secret
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.1
    command:
      - sh
      - -c
      - |
        # Проверяем права доступа к директории
        echo "Проверка прав доступа к /tmp/"
        ls -ld /tmp/

        # Создаем временный keystore без запроса пароля
        echo "Создаем временный keystore"
        /usr/share/elasticsearch/bin/elasticsearch-keystore create --silent --force -p /tmp/elasticsearch.keystore || { echo "Ошибка при создании keystore"; exit 1; }

        # Проверяем, существует ли временный keystore
        if [ ! -f /tmp/elasticsearch.keystore ]; then
          echo "Ошибка: временный keystore не создан"
          exit 1
        fi

        # Добавляем ключ в keystore
        echo "Добавляем ключ xpack.security.authc.realms.oidc.oidc1.rp.client_secret"
        echo "$CLIENT_SECRET" | /usr/share/elasticsearch/bin/elasticsearch-keystore add xpack.security.authc.realms.oidc.oidc1.rp.client_secret --stdin --force -p /tmp/elasticsearch.keystore || { echo "Ошибка при добавлении ключа в keystore"; exit 1; }

        # Копируем keystore в общую директорию
        echo "Копируем keystore в общую директорию"
        cp /tmp/elasticsearch.keystore /usr/share/elasticsearch/config/elasticsearch.keystore || { echo "Ошибка при копировании keystore"; exit 1; }

        # Проверяем содержимое keystore
        echo "Содержимое keystore:"
        /usr/share/elasticsearch/bin/elasticsearch-keystore list -p /usr/share/elasticsearch/config/elasticsearch.keystore || { echo "Ошибка при чтении keystore"; exit 1; }
    env:
      - name: CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            name: oidc-client-secret   # Имя вашего Kubernetes Secret
            key: client-secret         # Ключ внутри секрета
    volumeMounts:
      - name: keystore
        mountPath: /usr/share/elasticsearch/config/
      - name: temp-keystore
        mountPath: /tmp/elasticsearch.keystore

# Определение дополнительных томов
extraVolumes:
  - name: keystore
    emptyDir: {}
  - name: temp-keystore
    emptyDir: {}

# Конфигурация Elasticsearch
esConfig:
  elasticsearch.yml: |
    xpack.security.enabled: true
    xpack.security.authc.token.enabled: true
    xpack.security.authc.realms:
      oidc:
        oidc1:
          order: 0
          type: openid
          rp.client_id: "myKeycloakClientId"
          rp.response_type: "code"
          rp.redirect_uri: "http://192.168.1.35:31864/api/security/v1/oidc"
          rp.post_logout_redirect_uri: "http://192.168.1.35:31864/"
          op.issuer: "http://192.168.1.35:32080/realms/Chatter"
          op.authorization_endpoint: "http://192.168.1.35:32080/realms/Chatter/protocol/openid-connect/auth"
          op.token_endpoint: "http://192.168.1.35:32080/realms/Chatter/protocol/openid-connect/token"
          op.jwkset_path: "http://192.168.1.35:32080/realms/Chatter/protocol/openid-connect/certs"
          claims.principal: "sub"
          claims.groups: "groups"
          # Указываем, что client_secret берется из keystore
          rp.client_secret: ""

# Настройка VolumeMounts для контейнера Elasticsearch
extraVolumeMounts:
  - name: keystore
    mountPath: /usr/share/elasticsearch/config/elasticsearch.keystore
    readOnly: false