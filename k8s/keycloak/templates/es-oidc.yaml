extraVolumes:
  - name: config-writable
    emptyDir: {}
  - name: oidc-secret-volume
    secret:
      secretName: oidc-client-secret
      items:
        - key: client-secret
          path: client-secret

extraVolumeMounts:
  - name: config-writable
    mountPath: /config-writable
  - name: oidc-secret-volume
    mountPath: /secrets
    readOnly: true

extraInitContainers:
  - name: prepare-config
    image: "docker.elastic.co/elasticsearch/elasticsearch:8.5.1"
    command: ["/bin/sh", "-c"]
    args:
      - |
        export ES_PATH_CONF=/config-writable
        cp -r /usr/share/elasticsearch/config/* /config-writable/;

        # Проверяем, существует ли уже keystore
        if [ -f /config-writable/elasticsearch.keystore ]; then
          echo "Keystore уже существует, пропускаем создание."
        else
          echo "Keystore не найден, создаём новый..."
          /usr/share/elasticsearch/bin/elasticsearch-keystore create --silent
        fi

        # Добавляем client_secret, если его нет
        if /usr/share/elasticsearch/bin/elasticsearch-keystore list | grep -q "xpack.security.authc.realms.oidc.oidc1.rp.client_secret"; then
          echo "client_secret уже добавлен в keystore, пропускаем."
        else
          echo "Добавляем client_secret..."
          cat /secrets/client-secret | /usr/share/elasticsearch/bin/elasticsearch-keystore add \
            xpack.security.authc.realms.oidc.oidc1.rp.client_secret \
            --stdin --force
        fi
    env:
      - name: ES_PATH_CONF
        value: "/config-writable"
    volumeMounts:
      - name: config-writable
        mountPath: /config-writable
      - name: oidc-secret-volume
        mountPath: /secrets
        readOnly: true

extraEnvs:
  - name: ES_PATH_CONF
    value: "/config-writable"

esConfig:
  elasticsearch.yml: |
    xpack.security.enabled: true
    xpack.security.authc.token.enabled: true
    xpack.security.authc.realms:
      oidc:
        oidc1:
          order: 0
          rp.client_id: "myKeycloakClientId"
          rp.response_type: "code"
          rp.redirect_uri: "http://192.168.1.35:31864/api/security/v1/oidc"
          rp.post_logout_redirect_uri: "http://192.168.1.35:31864/"
          op.issuer: "http://192.168.1.35:32080/realms/Chatter"
          op.authorization_endpoint: "http://192.168.1.35:32080/realms/Chatter/protocol/openid-connect/auth"
          op.token_endpoint: "http://192.168.1.35:32080/realms/Chatter/protocol/openid-connect/token"
          op.jwkset_path: "http://192.168.1.35:32080/realms/Chatter/protocol/openid-connect/certs"
          claims.principal: "sub"
          claims.groups: groups
