secureSettings:
  - secretName: "my-oidc-secret"
    secretKeys:
      - key: "client-secret"
        path: "xpack.security.authc.realms.oidc.oidc1.rp.client_secret"

esConfig:
  elasticsearch.yml: |
    xpack.security.enabled: true

    # (Опционально, если нет/выключен) -- включаем TLS для transport.
    # xpack.security.transport.ssl.enabled: true
    # xpack.security.transport.ssl.verification_mode: certificate
    # И т.д. -- зависит от того, как у тебя сейчас настроено, можно оставить как есть.

    # Включаем HTTP SSL (рекомендуется, когда используем OIDC)
    # xpack.security.http.ssl.enabled: true
    # xpack.security.http.ssl.keystore.path: ...
    # xpack.security.http.ssl.truststore.path: ...

    xpack.security.authc.realms:
      oidc:
        oidc1:
          order: 0
          rp.client_id: "myKeycloakClientId"
          rp.response_type: "code"
          rp.redirect_uri: "http://192.168.1.35:31864/api/security/v1/oidc"
          rp.post_logout_redirect_uri: "http://192.168.1.35:31864/"
          # rp.scope: "openid profile"   # Добавляешь, если нужно

          op.issuer: "http://192.168.1.35:32080/realms/Chatter"
          op.authorization_endpoint: "http://192.168.1.35:32080/realms/Chatter/protocol/openid-connect/auth"
          op.token_endpoint: "http://192.168.1.35:32080/realms/Chatter/protocol/openid-connect/token"
          op.jwkset_path: "http://192.168.1.35:32080/realms/Chatter/protocol/openid-connect/certs"

          claims.principal: sub
          # claims.groups: "roles"
          # op.ssl.verification_mode: none
